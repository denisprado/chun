{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\denis\\\\Documents\\\\chun\\\\pages\\\\p\\\\[id].js\";\nimport React from \"react\";\nimport Layout from '../../components/Layout';\nimport fetch from 'isomorphic-unfetch';\n\nvar Page = function Page(_ref) {\n  var page = _ref.page;\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    key: page.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, page.content), React.createElement(\"div\", {\n    className: \"column-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"hero-image\",\n    src: \"//localhost:3333/\" + page.image,\n    alt: page.content,\n    width: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }))));\n};\n\nPage.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var id, res, page;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = context.query.id;\n            _context.next = 3;\n            return fetch(\"http://localhost:3333/pages/\".concat(id));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            page = _context.sent;\n            return _context.abrupt(\"return\", {\n              page: page\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Page;","map":{"version":3,"sources":["C:\\Users\\denis\\Documents\\chun\\pages\\p\\[id].js"],"names":["Layout","fetch","Page","page","id","content","image","getInitialProps","context","query","res","json"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,SACX,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBD,IAAI,CAACE,OAA5B,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,GAAG,EAAE,sBAAsBF,IAAI,CAACG,KAFlC;AAGE,IAAA,GAAG,EAAEH,IAAI,CAACE,OAHZ;AAIE,IAAA,KAAK,EAAC,MAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF,CADW;AAAA,CAAb;;AAgBAH,IAAI,CAACK,eAAL;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuB,iBAAgBC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACbJ,YAAAA,EADa,GACNI,OAAO,CAACC,KADF,CACbL,EADa;AAAA;AAAA,mBAEHH,KAAK,uCAAgCG,EAAhC,EAFF;;AAAA;AAEfM,YAAAA,GAFe;AAAA;AAAA,mBAGFA,GAAG,CAACC,IAAJ,EAHE;;AAAA;AAGfR,YAAAA,IAHe;AAAA,6CAKd;AAAEA,cAAAA,IAAI,EAAJA;AAAF,aALc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAQA,eAAeD,IAAf","sourcesContent":["import Layout from '../../components/Layout';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nconst Page = ({ page }) => (\r\n  <Layout>\r\n    <div className=\"row\" key={page.id}>\r\n      <p className=\"column\">{page.content}</p>\r\n      <div className=\"column-2\">\r\n        <img\r\n          className=\"hero-image\"\r\n          src={\"//localhost:3333/\" + page.image}\r\n          alt={page.content}\r\n          width=\"100%\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </Layout>\r\n);\r\n\r\nPage.getInitialProps = async function (context) {\r\n  const { id } = context.query;\r\n  const res = await fetch(`http://localhost:3333/pages/${id}`);\r\n  const page = await res.json();\r\n\r\n  return { page };\r\n};\r\n\r\nexport default Page;"]},"metadata":{},"sourceType":"module"}